pipeline GTFSDataPipeline {

    // Structure of the pipeline
    GTFSDataExtractor
        -> StopsFilePicker 
        -> StopsTextFileInterpreter
        -> StopsCSVInterpreter
        -> StopsTableInterpreter 
        -> StopsSQLiteDataLoader;

    // Reading data from source url
    block GTFSDataExtractor oftype GTFSExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block StopsFilePicker oftype FilePicker {
        path: "/stops.txt";
    }

    block StopsTextFileInterpreter oftype TextFileInterpreter {encoding: 'utf8';}
    block StopsCSVInterpreter oftype CSVInterpreter {enclosing: '"';}

    // Setting constraints for the "stop_lat" and "stop_lon"
    constraint CoordinateValidRange oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: true;
        upperBound: 90;
        upperBoundInclusive: true;
    }

    valuetype AllowedCoordinates oftype decimal {
        constraints: [ CoordinateValidRange ];
    }

    // Setting constraints for only selecting values with "zone_id" - 1645
    constraint ZoneIDConstraint on integer:
        value == 1645;

    valuetype AllowedZoneID oftype integer {
        constraints: [ZoneIDConstraint];
    }

    // Defineing the datatypes
    block StopsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype AllowedCoordinates,
            "stop_lon" oftype AllowedCoordinates,
            "zone_id" oftype AllowedZoneID
        ];
    }

    // Loading into SQLite DB in "stops" table
    block StopsSQLiteDataLoader oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }
}